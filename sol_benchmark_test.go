package main

import (
	"megaproj1/utils"
	"testing"
)

var (
	test0 = []utils.Interval{{25, 30}, {2, 19}, {14, 23}, {4, 8}}
	test1 = []utils.Interval{{-20, 0}, {300, 455}, {1, 2}, {5, 10}, {4, 23}, {4, 54}, {55, 100}, {102, 200}, {198, 255}, {201, 220}, {215, 216}, {177, 199}, {180, 256}}
	test2 = []utils.Interval{{-100, -30}, {-99, -50}, {-95, -40}, {0, 1}, {-99, -49}, {-97, -91}, {-70, -49}, {-69, -61}, {-67, -62}, {-65, -63}, {-20, 0}, {-19, -10}, {-17, -15}, {-15, -13}, {-14, -11}, {300, 455}, {1, 2}, {5, 10}, {4, 23}, {4, 54}, {55, 100}, {102, 200}, {198, 255}, {201, 220}, {215, 216}, {177, 199}, {180, 256}, {251, 252}, {256, 260}, {259, 261}, {260, 261}, {-100, -30}, {-99, -50}, {-95, -40}, {0, 1}, {-99, -49}, {-97, -91}, {-70, -49}, {-69, -61}, {-67, -62}, {-65, -63}, {-20, 0}, {-19, -10}, {-17, -15}, {-15, -13}, {-14, -11}, {300, 455}, {1, 2}, {5, 10}, {4, 23}, {4, 54}, {55, 100}, {102, 200}, {198, 255}, {201, 220}, {215, 216}, {177, 199}, {180, 256}, {251, 252}, {256, 260}, {259, 261}, {260, 261}, {-100, -30}, {-99, -50}, {-95, -40}, {0, 1}, {-99, -49}, {-97, -91}, {-70, -49}, {-69, -61}, {-67, -62}, {-65, -63}, {-20, 0}, {-19, -10}, {-17, -15}, {-15, -13}, {-14, -11}, {300, 455}, {1, 2}, {5, 10}, {4, 23}, {4, 54}, {55, 100}, {102, 200}, {198, 255}, {201, 220}, {215, 216}, {177, 199}, {180, 256}, {251, 252}, {256, 260}, {259, 261}, {260, 261}, {-100, -30}, {-99, -50}, {-95, -40}, {0, 1}, {-99, -49}, {-97, -91}, {-70, -49}, {-69, -61}, {-67, -62}, {-65, -63}, {-20, 0}, {-19, -10}, {-17, -15}, {-15, -13}, {-14, -11}, {300, 455}, {1, 2}, {5, 10}, {4, 23}, {4, 54}, {55, 100}, {102, 200}, {198, 255}, {201, 220}, {215, 216}, {177, 199}, {180, 256}, {251, 252}, {256, 260}, {259, 261}, {260, 261}, {-100, -30}, {-99, -50}, {-95, -40}, {0, 1}, {-99, -49}, {-97, -91}, {-70, -49}, {-69, -61}, {-67, -62}, {-65, -63}, {-20, 0}, {-19, -10}, {-17, -15}, {-15, -13}, {-14, -11}, {300, 455}, {1, 2}, {5, 10}, {4, 23}, {4, 54}, {55, 100}, {102, 200}, {198, 255}, {201, 220}, {215, 216}, {177, 199}, {180, 256}, {251, 252}, {256, 260}, {259, 261}, {260, 261}, {-100, -30}, {-99, -50}, {-95, -40}, {0, 1}, {-99, -49}, {-97, -91}, {-70, -49}, {-69, -61}, {-67, -62}, {-65, -63}, {-20, 0}, {-19, -10}, {-17, -15}, {-15, -13}, {-14, -11}, {300, 455}, {1, 2}, {5, 10}, {4, 23}, {4, 54}, {55, 100}, {102, 200}, {198, 255}, {201, 220}, {215, 216}, {177, 199}, {180, 256}, {251, 252}, {256, 260}, {259, 261}, {260, 261}, {-100, -30}, {-99, -50}, {-95, -40}, {0, 1}, {-99, -49}, {-97, -91}, {-70, -49}, {-69, -61}, {-67, -62}, {-65, -63}, {-20, 0}, {-19, -10}, {-17, -15}, {-15, -13}, {-14, -11}, {300, 455}, {1, 2}, {5, 10}, {4, 23}, {4, 54}, {55, 100}, {102, 200}, {198, 255}, {201, 220}, {215, 216}, {177, 199}, {180, 256}, {251, 252}, {256, 260}, {259, 261}, {260, 261}, {-100, -30}, {-99, -50}, {-95, -40}, {0, 1}, {-99, -49}, {-97, -91}, {-70, -49}, {-69, -61}, {-67, -62}, {-65, -63}, {-20, 0}, {-19, -10}, {-17, -15}, {-15, -13}, {-14, -11}, {300, 455}, {1, 2}, {5, 10}, {4, 23}, {4, 54}, {55, 100}, {102, 200}, {198, 255}, {201, 220}, {215, 216}, {177, 199}, {180, 256}, {251, 252}, {256, 260}, {259, 261}, {260, 261}, {-100, -30}, {-99, -50}, {-95, -40}, {0, 1}, {-99, -49}, {-97, -91}, {-70, -49}, {-69, -61}, {-67, -62}, {-65, -63}, {-20, 0}, {-19, -10}, {-17, -15}, {-15, -13}, {-14, -11}, {300, 455}, {1, 2}, {5, 10}, {4, 23}, {4, 54}, {55, 100}, {102, 200}, {198, 255}, {201, 220}, {215, 216}, {177, 199}, {180, 256}, {251, 252}, {256, 260}, {259, 261}, {260, 261}, {-100, -30}, {-99, -50}, {-95, -40}, {0, 1}, {-99, -49}, {-97, -91}, {-70, -49}, {-69, -61}, {-67, -62}, {-65, -63}, {-20, 0}, {-19, -10}, {-17, -15}, {-15, -13}, {-14, -11}, {300, 455}, {1, 2}, {5, 10}, {4, 23}, {4, 54}, {55, 100}, {102, 200}, {198, 255}, {201, 220}, {215, 216}, {177, 199}, {180, 256}, {251, 252}, {256, 260}, {259, 261}, {260, 261}, {-100, -30}, {-99, -50}, {-95, -40}, {0, 1}, {-99, -49}, {-97, -91}, {-70, -49}, {-69, -61}, {-67, -62}, {-65, -63}, {-20, 0}, {-19, -10}, {-17, -15}, {-15, -13}, {-14, -11}, {300, 455}, {1, 2}, {5, 10}, {4, 23}, {4, 54}, {55, 100}, {102, 200}, {198, 255}, {201, 220}, {215, 216}, {177, 199}, {180, 256}, {251, 252}, {256, 260}, {259, 261}, {260, 261}, {-100, -30}, {-99, -50}, {-95, -40}, {0, 1}, {-99, -49}, {-97, -91}, {-70, -49}, {-69, -61}, {-67, -62}, {-65, -63}, {-20, 0}, {-19, -10}, {-17, -15}, {-15, -13}, {-14, -11}, {300, 455}, {1, 2}, {5, 10}, {4, 23}, {4, 54}, {55, 100}, {102, 200}, {198, 255}, {201, 220}, {215, 216}, {177, 199}, {180, 256}, {251, 252}, {256, 260}, {259, 261}, {260, 261}, {-100, -30}, {-99, -50}, {-95, -40}, {0, 1}, {-99, -49}, {-97, -91}, {-70, -49}, {-69, -61}, {-67, -62}, {-65, -63}, {-20, 0}, {-19, -10}, {-17, -15}, {-15, -13}, {-14, -11}, {300, 455}, {1, 2}, {5, 10}, {4, 23}, {4, 54}, {55, 100}, {102, 200}, {198, 255}, {201, 220}, {215, 216}, {177, 199}, {180, 256}, {251, 252}, {256, 260}, {259, 261}, {260, 261}, {-100, -30}, {-99, -50}, {-95, -40}, {0, 1}, {-99, -49}, {-97, -91}, {-70, -49}, {-69, -61}, {-67, -62}, {-65, -63}, {-20, 0}, {-19, -10}, {-17, -15}, {-15, -13}, {-14, -11}, {300, 455}, {1, 2}, {5, 10}, {4, 23}, {4, 54}, {55, 100}, {102, 200}, {198, 255}, {201, 220}, {215, 216}, {177, 199}, {180, 256}, {251, 252}, {256, 260}, {259, 261}, {260, 261}, {-100, -30}, {-99, -50}, {-95, -40}, {0, 1}, {-99, -49}, {-97, -91}, {-70, -49}, {-69, -61}, {-67, -62}, {-65, -63}, {-20, 0}, {-19, -10}, {-17, -15}, {-15, -13}, {-14, -11}, {300, 455}, {1, 2}, {5, 10}, {4, 23}, {4, 54}, {55, 100}, {102, 200}, {198, 255}, {201, 220}, {215, 216}, {177, 199}, {180, 256}, {251, 252}, {256, 260}, {259, 261}, {260, 261}}
)

func BenchmarkForSpeedSolItest0(b *testing.B) {
	for i := 0; i < b.N; i++ {
		utils.MERGEI(test0)
	}
}

func BenchmarkForSpeedSolIItest0(b *testing.B) {
	for i := 0; i < b.N; i++ {
		utils.MERGEII(test0)
	}
}

func BenchmarkForSpeedSolIIItest0(b *testing.B) {
	for i := 0; i < b.N; i++ {
		utils.MERGEIII(test0)
	}
}

func BenchmarkForSpeedSolItest1(b *testing.B) {
	for i := 0; i < b.N; i++ {
		utils.MERGEI(test1)
	}
}

func BenchmarkForSpeedSolIItest1(b *testing.B) {
	for i := 0; i < b.N; i++ {
		utils.MERGEII(test1)
	}
}

func BenchmarkForSpeedSolIIItest1(b *testing.B) {
	for i := 0; i < b.N; i++ {
		utils.MERGEIII(test1)
	}
}

func BenchmarkForSpeedSolItest2(b *testing.B) {
	for i := 0; i < b.N; i++ {
		utils.MERGEI(test2)
	}
}

func BenchmarkForSpeedSolIItest2(b *testing.B) {
	for i := 0; i < b.N; i++ {
		utils.MERGEII(test2)
	}
}

func BenchmarkForSpeedSolIIItest2(b *testing.B) {
	for i := 0; i < b.N; i++ {
		utils.MERGEIII(test2)
	}
}
